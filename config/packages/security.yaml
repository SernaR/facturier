security:
    encoders:
        App\Entity\user:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        in_database: 
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: in_database
            form_login: 
                login_path: security_login
                check_path: security_login
            logout: 
                path: security_logout
                target: security_login
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER           
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/inscription, roles: ROLE_ADMIN }
        - { path: ^/service, roles: ROLE_ADMIN }
        - { path: ^/debit, roles: ROLE_ADMIN }
        - { path: ^/research/findQuotation, roles: ROLE_USER }
        - { path: ^/research, roles: ROLE_ADMIN }
        - { path: ^/creation/invoice, roles: ROLE_ADMIN }
        - { path: ^/quotation/cancel, roles: ROLE_USER }
        - { path: ^/quotation, roles: ROLE_ADMIN }
        - { path: ^/invoice, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }